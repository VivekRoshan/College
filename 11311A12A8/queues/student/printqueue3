/*Name:S.Vivek Roshan                         Date:15/03/2012  
Class:ITF2                             
elementdef.h */
struct student
{
	int rollno;
	char name[20];
	float marks;
};
typedef struct student elementtype;




/*Name:S.Vivek Roshan                               Date:15/03/2012
Class:IT F2                                         Roll:11311A12A8
 * element.h*/
#include<stdio.h>
#include<stdlib.h>
#include"elementdef.h"        //adding the elementdef.h header file
elementtype readelement();     //reading the element
void showelement(elementtype x);   //prototype for showing the element




/*Name:S.Vivek Roshan                               Date:15/03/2012
Class:IT F2   
element.c*/                                      Roll:11311A12A8
#include<stdio.h>
#include<stdlib.h>
#include"element.h"     //including the element.h header file
elementtype readelement()
{
        elementtype x;   //function to read the element
        printf("enter the rollnumber");
        scanf("%d",&x.rollno);
        printf("enter the name:");
        scanf("%s",x.name);
        printf("enter the marks");
        scanf("%f",&x.marks);         //reading the element structure
        return x;
}
void showelement(elementtype x)     //function to show the element
{
        printf("rollno is %d\n",x.rollno);
        printf("name is %s\n",x.name);
        printf("marks are %f\n",x.marks);
        putchar('\n');
}



/*Name:S.Vivek Roshan                           Date:
Class:IT F2                                   Roll:11311A12A8
 * queueADT.h*/
#include<stdio.h>
#include<stdlib.h>
#include"element.h"       //including the element.h
struct queue               //structure of the stack
{
        int maxsize;       //members
        int front;
	int rear;
        elementtype *queueelement;
};                                  //all the prototypes
struct queue createqueue(int m);
void initqueue(struct queue *s);
int empty(struct queue *s);
int full(struct queue *s);
void add(struct queue *s,elementtype e);
elementtype delete(struct queue *s);
void display(struct queue s);
elementtype viewhead(struct queue s);
void disposequeue(struct queue *s);

/*Name:S.Vivek Roshan                      Date:15/03/2012    
Class:IT F2                                Roll:11311A12A8
 * queueADT.c*/
#include<stdio.h>
#include<stdlib.h>
#include"queueADT.h"       //including the stackADT.h header file
struct queue createqueue(int m)     //creating the memory
{
        struct queue temp;
        temp.maxsize=m;
        temp.queueelement=(elementtype*)malloc(m*sizeof (elementtype));
        return temp;
}
void initqueue(struct queue *s)     //initialising the stack in function
{
        s->front=0;
	s->rear=0;
}
int empty(struct queue *s)
{
        return(s->rear==0);                //checking wheather it is empty
}
int full(struct queue *s)            //checking wheather it is full
{
        return(s->rear==s->maxsize);
}
void add(struct queue *s,elementtype e)    //function for pushing
{
if(full(s))
        printf("error:over flow");
else
        s->queueelement[s->rear++]=e;
}
elementtype delete(struct queue *s)           //function for popping
{
	elementtype e;
	int i;
	if(empty(s))
	{
        	printf("error:under flow");
        	exit(1);
	}	
	e=s->queueelement[s->front];
	for(i=s->front;i<s->rear;i++)
	s->queueelement[i]=s->queueelement[i+1];
	(s->rear)--;
	return e;
}
void display(struct queue s)               //function for display the queue
{
        int i;
        printf("head--->\n");
        for(i=s.front;i<=s.rear-1;i++)
{
showelement(s.queueelement[i]);
}
        printf("-------------------tail");
}
elementtype viewhead(struct queue s)      //function for viewing the top
{
        return(s.queueelement[s.front]);
}
void disposequeue(struct queue *s)   //for disposing the queue
{
        free(s->queueelement);
}



/*Name:S.Vivek Roshan                            Roll:11311A12A8
 * Class:IT F2                                   Date:15/03/2012 
 * queue.c*/
#include<stdio.h>
#include<stdlib.h>
#include"queueADT.h"           //including stackADT.h header file
int menu()
{
	int choice;
	printf("\t1.add\n\t2.delete\n\t3.view head\n\t4.display\n\t5.exit\n"); //choices
	printf("enter choice");
	scanf("%d",&choice);
	return choice;
}
int main()    //main program
{
	struct queue s;
	int choice;
	elementtype x;
	s=createqueue(20);   //calling the function
	initqueue(&s);
	while((choice=menu())!=5)     //calling the function

	{	
	switch(choice)     //switch case
	{
	case 1:x=readelement();
	       add(&s,x);
	       break;
	case 2:x=delete(&s);
	      showelement(x);
	      break;
	case 3:showelement(viewhead(s));
	       break;
	case 4:display(s);
	       break;
	default:printf("error\n");
	}
}
return 0;
}

/*
 *     OUTPUTS
[11311A12A8@itlab student]$ gcc queue.c element.c queueADT.c
[11311A12A8@itlab student]$ ./a.out
        1.add
        2.delete
        3.view head
        4.display
        5.exit
enter choice1
enter the rollnumber12
enter the name:viv
enter the marks98
        1.add
        2.delete
        3.view head
        4.display
        5.exit
enter choice1
enter the rollnumber13
enter the name:ros
enter the marks98
        1.add
        2.delete
        3.view head
        4.display
        5.exit
enter choice1
enter the rollnumber14
enter the name:vic
enter the marks89
        1.add
        2.delete
        3.view head
        4.display
        5.exit
enter choice2
rollno is 12
name is viv
marks are 98.000000

        1.add
        2.delete
        3.view head
        4.display
        5.exit
enter choice3
rollno is 13
name is ros
marks are 98.000000

        1.add
        2.delete
        3.view head
        4.display
        5.exit
enter choice4
head--->
rollno is 13
name is ros
marks are 98.000000

rollno is 14
name is vic
marks are 89.000000

-------------------tail 1.add
        2.delete
        3.view head
        4.display
        5.exit
enter choice5
*/

